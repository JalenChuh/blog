<% if (config.lazyload && config.lazyload.enable) { %>
    <script defer src="<%- theme.vendors.lazyload || 'https://cdn.jsdelivr.net/npm/vanilla-lazyload@12.0.0/dist/lazyload.min.js' %>"></script>
    <script>
        window.lazyLoadOptions = {
            elements_selector: ".lazyload",
            threshold: 0
        };
    </script>
<% } %>

<%- partial('_third-party/analytics') %> 

<% if (theme.optimize.fancybox.enable) { %>
    <%- partial('_third-party/fancybox') %> 
<% } %> 

<% if (theme.optimize.back_to_top.enable && theme.optimize.back_to_top.smoothly) { %> 
    <%- js(theme.vendors.back_to_top || 'js/b2t.js') %>
<% } %>

<% if (page.mathjax) { %>
    <%- partial('_third-party/mathjax') %>
<% } %>

<% if (page.comments && theme.comments.enable) { %>
    <% if (theme.comments.disqus.enable) { %>
        <% if (theme.comments.disqus.disqusjs.enable) { %>
            <script>
                function callback() {
                    window.disqus_config = function () {
                        this.page.url = '<%= page.permalink %>';
                        this.page.identifier = '<%= page.path %>';
                    }
                    new DisqusJS({
                        shortname: '<%= theme.comments.disqus.shortname %>',
                        siteName: '<%= config.title %>',
                        api: '<%= theme.comments.disqus.disqusjs.api %>',
                        apikey: '<%= theme.comments.disqus.disqusjs.apikey %>',
                        admin: '<%= theme.comments.disqus.disqusjs.admin %>',
                        identifier: '<%= page.path %>',
                        url: '<%= page.permalink %>',
                        nesting: '<%= theme.comments.disqus.disqusjs.nesting %>'
                    });
                }
                function addStyle(url) {
                    var d = document.createElement('link');
                    d.rel = 'stylesheet';
                    d.href = url;
                    document.head.appendChild(d);
                }
                function addScript(url) {
                    var d = document.createElement('script');
                    d.src = url;
                    d.async = false;
                    document.body.appendChild(d);
                    d.onload = () => {
                        callback();
                    }
                }

                function loadDisqus() {
                    addScript('https://cdn.jsdelivr.net/npm/disqusjs@1.3/dist/disqus.js');
                    addStyle('https://cdn.jsdelivr.net/npm/disqusjs@1.3/dist/disqusjs.css');
                }

                var runningOnBrowser = typeof window !== "undefined";
                var isBot = runningOnBrowser && !("onscroll" in window) || typeof navigator !== "undefined" && /(gle|ing|ro|msn)bot|crawl|spider|yand|duckgo/i.test(navigator.userAgent);
                var supportsIntersectionObserver = runningOnBrowser && "IntersectionObserver" in window;

                setTimeout(function () {
                    if (!isBot && supportsIntersectionObserver) {
                        var disqus_observer = new IntersectionObserver(function(entries) {
                            if (entries[0].isIntersecting) {
                                loadDisqus();
                                disqus_observer.disconnect();
                            }
                        });
                        disqus_observer.observe(document.getElementById('disqus_thread'));
                    } else {
                        loadDisqus();
                    }
                }, 0);
            </script>
        <% } else { %>
            <script>
                var disqus_shortname = '<%= theme.comments.disqus.shortname %>', disqus_url = '<%= page.permalink %>';
                (function(){
                    var dsq = document.createElement('script');
                    dsq.type = 'text/javascript';
                    dsq.async = true;
                    dsq.src = '//' + disqus_shortname + '.disqus.com/<% if (page.comments) { %>embed.js<% } else { %>count.js<% } %>';
                    (document.getElementsByTagName('head')[0] || document.getElementsByTagName('body')[0]).appendChild(dsq);
                })();
            </script>
        <% } %>
    <% } %>

    <% if (theme.comments.valine.enable) { %>
        <%- js(theme.vendors.valine || 'https://cdn.jsdelivr.net/npm/valine@1.4.14/dist/Valine.min.js') %>
        <script>
            var valineConfig = <%- JSON.stringify(theme.comments.valine) %>;
            valineConfig.el = '#valine_container';
            for (var i in valineConfig) {
                if (valineConfig[i] === null) delete valineConfig[i];
            }
            new Valine(valineConfig);
        </script>
    <% } %>

    <% if (theme.comments.minivaline.enable) { %>
        <%- js(theme.vendors.minivaline || 'https://cdn.jsdelivr.net/npm/minivaline@2.7.5/dist/MiniValine.min.js') %>
        <script>
            var minivalineConfig = <%- JSON.stringify(theme.comments.minivaline) %>;
            minivalineConfig.el = '#minivaline_container';
            for (var i in minivalineConfig) {
                if (minivalineConfig[i] === null) delete minivalineConfig[i];
            }
            new MiniValine(minivalineConfig);
        </script>
    <% } %>

    <% if (theme.comments.gitalk.enable) { %>
        <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/gitalk@1/dist/gitalk.css">
        <script src="https://cdn.jsdelivr.net/npm/gitalk@1/dist/gitalk.min.js"></script>
        <script>
            var gitalk = new Gitalk({
                clientID: '<%- theme.comments.gitalk.clientID %>',
                clientSecret: '<%- theme.comments.gitalk.clientSecret %>',
                repo: '<%- theme.comments.gitalk.repo %>',
                owner: '<%- theme.comments.gitalk.owner %>',
                admin: '<%- theme.comments.gitalk.owner %>',
                id: window.location.pathname,
                distractionFreeMode: false
            });
            gitalk.render('gitalk-container');
        </script>
    <% } %>

    <% if (theme.comments.gitment.enable) { %>
        <link rel="stylesheet" href="https://imsun.github.io/gitment/style/default.css">
        <script src="https://imsun.github.io/gitment/dist/gitment.browser.js"></script>
        <script>
            var gitment = new Gitment({
                id: window.location.pathname,
                owner: '<%= theme.comments.gitment.owner %>',
                repo: '<%= theme.comments.gitment.repo %>',
                oauth: {
                    client_id: '<%= theme.comments.gitment.client_id %>',
                    client_secret: '<%= theme.comments.gitment.client_secret %>',
                },
            })
            gitment.render('gitment-container')
        </script>
    <% } %>

    <% if (theme.comments.livere.enable){ %>
        <script type="text/javascript">
            (function(d, s) {
                var j, e = d.getElementsByTagName(s)[0];
                if (typeof LivereTower === 'function') { return; }
                j = d.createElement(s);
                j.src = 'https://cdn-city.livere.com/js/embed.dist.js';
                j.async = true;
                e.parentNode.insertBefore(j, e);
            })(document, 'script');
        </script>
    <% } %>

    <% if (theme.comments.changyan.enable) { %>
        <script>
            (function(){
                var appid = '<%= theme.comments.changyan.appid %>';
                var conf = '<%= theme.comments.changyan.conf %>';
                var width = window.innerWidth || document.documentElement.clientWidth;
                if (width < 960) {
                    window.document.write('<script id="changyan_mobile_js" charset="utf-8" defer crossorigin="anonymous" src="https://changyan.sohu.com/upload/mobile/wap-js/changyan_mobile.js?client_id=' + appid + '&conf=' + conf + '"><\/script>');
                } else {
                    var loadJs=function(d,a){var c=document.getElementsByTagName("head")[0]||document.head||document.documentElement;var b=document.createElement("script");b.setAttribute("type","text/javascript");b.setAttribute("charset","UTF-8");b.setAttribute("src",d);if (typeof a==="function"){if (window.attachEvent){b.onreadystatechange=function(){var e=b.readyState;if (e==="loaded"||e==="complete"){b.onreadystatechange=null;a()}}}else{b.onload=a}}c.appendChild(b)};loadJs("https://changyan.sohu.com/upload/changyan.js",function(){window.changyan.api.config({appid:appid,conf:conf})});
                }
            })();
        </script>
    <% } %>

    <% if (theme.comments.wildfire.enable) { %>
        <%- js(theme.vendors.wildfire || 'https://cdn.jsdelivr.net/npm/wildfire@0.3.9/dist/wildfire.auto.js') %>
        <script>
            var wildfireConfig = () => ({
                databaseProvider: '<%= theme.comments.wildfire.database_provider %>',
                databaseConfig: {
                    <% if (theme.comments.wildfire.database_provider == "wilddog") { %>
                        siteId: '<%= theme.comments.wildfire.wilddog_site_id %>' 
                    <% } else if (theme.comments.wildfire.database_provider == "firebase") { %>
                        apiKey: '<%= theme.comments.wildfire.firebase_api_key %>',
                        authDomain: '<%= theme.comments.wildfire.firebase_auth_domain %>',
                        databaseURL: '<%= theme.comments.wildfire.firebase_database_url %>',
                        projectId: '<%= theme.comments.wildfire.firebase_project_id %>',
                        storageBucket: '<%= theme.comments.wildfire.firebase_storage_bucket %>',
                        messagingSenderId: '<%= theme.comments.wildfire.firebase_messaging_sender_id %>'
                    <% } %>
                },
                theme: '<%= theme.comments.wildfire.theme %>',
                locale: '<%= theme.comments.wildfire.locale %>'
            })
        </script>
    <% } %>
<% } %>

<% if (theme.vendors.custom_script && theme.vendors.custom_script.forEach) { %>
    <% theme.vendors.custom_script.forEach((item) => { %>
        <%- item %> 
    <% }); %>
<% } %>

<% if (theme.analytics.leancloud.enable) { %>
    <script defer>
        (function () {
            // 查询存储的记录
            function getRecord(Counter, target) {
                return new Promise(function (resolve, reject) {
                    Counter('get', '/classes/Counter?where=' + encodeURIComponent(JSON.stringify({ target })))
                        .then(resp => resp.json())
                        .then(({ results, code, error }) => {
                            if (code === 401) {
                                throw error;
                            }
                            if (results && results.length > 0) {
                                var record = results[0];
                                resolve(record);
                            } else {
                                Counter('post', '/classes/Counter', { target, time: 0 })
                                    .then(resp => resp.json())
                                    .then((record, error) => {
                                        if (error) {
                                            throw error;
                                        }
                                        resolve(record);
                                    }).catch(error => {
                                        console.error('Failed to create', error);
                                        reject(error);
                                    });
                            }
                        }).catch((error) => {
                            console.error('LeanCloud Counter Error:', error);
                            reject(error);
                        });
                })
            }

            // 发起自增请求
            function increment(Counter, incrArr) {
                return new Promise(function (resolve, reject) {
                    Counter('post', '/batch', {
                        "requests": incrArr
                    }).then((res) => {
                        res = res.json();
                        if (res.error) {
                            throw res.error;
                        }
                        resolve(res);
                    }).catch((error) => {
                        console.error('Failed to save visitor count', error);
                        reject(error);
                    });
                });
            }

            // 构建自增请求体
            function buildIncrement(objectId) {
                return {
                    "method": "PUT",
                    "path": `/1.1/classes/Counter/${objectId}`,
                    "body": {
                        "time": {
                            '__op': 'Increment',
                            'amount': 1
                        }
                    }
                }
            }

            // 校验是否为有效的 UV
            function validUV() {
                var key = 'LeanCloud_UV_Flag';
                var flag = localStorage.getItem(key);
                if (flag) {
                    // 距离标记小于 24 小时则不计为 UV
                    if (new Date().getTime() - parseInt(flag) <= 86400000) {
                        return false;
                    }
                }
                localStorage.setItem(key, new Date().getTime().toString());
                return true;
            }

            function addCount(Counter) {
                var enableIncr = window.location.hostname !== 'localhost';
                var getterArr = [];
                var incrArr = [];

                // 请求 PV 并自增
                var pvCtn = document.querySelector('#leancloud-site-pv-container');
                if (pvCtn || enableIncr) {
                    var pvGetter = getRecord(Counter, 'site-pv').then((record) => {
                        incrArr.push(buildIncrement(record.objectId))
                        var ele = document.querySelector('#leancloud-site-pv');
                        if (ele) {
                            ele.innerText = record.time + 1;
                            if (pvCtn) {
                                pvCtn.style.display = 'inline';
                            }
                        }
                    });
                    getterArr.push(pvGetter);
                }

                // 请求 UV 并自增
                var uvCtn = document.querySelector('#leancloud-site-uv-container');
                if (uvCtn || enableIncr) {
                    var uvGetter = getRecord(Counter, 'site-uv').then((record) => {
                        var vuv = validUV();
                        vuv && incrArr.push(buildIncrement(record.objectId))
                        var ele = document.querySelector('#leancloud-site-uv');
                        if (ele) {
                            ele.innerText = record.time + (vuv ? 1 : 0);
                            if (uvCtn) {
                                uvCtn.style.display = 'inline';
                            }
                        }
                    });
                    getterArr.push(uvGetter);
                }

                // 如果是文章，请求文章的浏览数，并自增
                if ('<%= is_post() %>' === 'true') {
                    var viewCtn = document.querySelector('#leancloud-post-views-container');
                    if (viewCtn || enableIncr) {
                        var target = decodeURI('<%= url_for(page.path) %>');
                        var viewGetter = getRecord(Counter, target).then((record) => {
                            incrArr.push(buildIncrement(record.objectId))
                            if (viewCtn) {
                                var ele = document.querySelector('#leancloud-post-views');
                                if (ele) {
                                    ele.innerText = (record.time || 0) + 1;
                                    viewCtn.style.display = 'inline';
                                }
                            }
                        });
                        getterArr.push(viewGetter);
                    }
                }

                // 如果启动计数自增，批量发起自增请求
                if (enableIncr) {
                    Promise.all(getterArr).then(() => {
                        incrArr.length > 0 && increment(Counter, incrArr);
                    })
                }
            }

            var app_id = '<%= theme.analytics.leancloud.app_id %>'
            var app_key = '<%= theme.analytics.leancloud.app_key %>'
            var server_url = '<%= theme.analytics.leancloud.server_url %>'

            function fetchData(api_server) {
                var Counter = (method, url, data) => {
                    return fetch(`${api_server}/1.1${url}`, {
                        method,
                        headers: {
                            'X-LC-Id': app_id,
                            'X-LC-Key': app_key,
                            'Content-Type': 'application/json',
                        },
                        body: JSON.stringify(data)
                    });
                };

                addCount(Counter);
            }

            var api_server = app_id.slice(-9) !== '-MdYXbMMI' ? server_url : `https://${app_id.slice(0, 8).toLowerCase()}.api.lncldglobal.com`;

            if (api_server) {
                fetchData(api_server);
            } else {
                fetch('https://app-router.leancloud.cn/2/route?appId=' + app_id)
                    .then(resp => resp.json())
                    .then(({ api_server }) => {
                        fetchData('https://' + api_server);
                    });
            }
        })();
    </script>
<% } %>

<% if (page.comments && theme.comments.enable) { %>
    <script src="https://cdn.jsdelivr.net/gh/jquery/jquery/dist/jquery.min.js"></script>
    <script src="https://cdn.jsdelivr.net/combine/npm/leancloud-storage@3.0.4/dist/av-min.js,gh/jalenchuh/cdn/js/Valine.min.js"></script>
    <script>
        new Valine({
            lang: 'zh-cn',
            el: '.post__comment' ,
            app_id: '<%= theme.comments.valineAdmin.appid %>',
            app_key: '<%= theme.comments.valineAdmin.appkey %>',
            admin_email: '<%= theme.comments.valineAdmin.admin_email %>',
            placeholder: '<%= theme.comments.valineAdmin.placeholder %>',
        });
    </script>
<% } %>

<script>
    window.FPConfig = {
      delay: 0,
      ignoreKeywords: ['#'],
      maxRPS: 6,
      hoverDelay: 0
    };
</script>
<script defer src="https://cdn.jsdelivr.net/gh/gijo-varghese/flying-pages@2.1.2/flying-pages.min.js"></script>
